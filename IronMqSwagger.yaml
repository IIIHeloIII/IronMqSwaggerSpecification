swagger: '2.0'

info:
  version: "0.5.0"
  title: IronMq api

paths:
  /queues/{QueueName}/messages:
    post:
      description: |
        Post messages to the queue
      parameters:
        - 
          in: path
          name: QueueName
          description: Name of the queue
          required: true
          schema:
            type: string
        - 
          in: query
          name: oauth
          description: Access token
          required: true
          schema:
            type: string
        - 
          in: body
          name: EnqueueMessages
          description: Object with message array to put in queue
          required: true
          schema:
            type: object
            properties:
              messages:
                type: array
                items: 
                  title: Message
                  type: object
                  properties:
                    body:
                      type: string
                    delay:
                      type: integer
                      description: The item will not be available on the queue until this many seconds have passed. Default is 0 seconds. Maximum is 604800 seconds (7 days).
                      default: 0
            
      responses:
        201:
          description: Successful response
          schema:
            type: object
            properties:
              msg:
                type: string
              ids:
                type: array
                items:
                  type: string

  /queues/{queuename}/reservations:
    post:
      description: |
        Get and reserve messages on the queue
      parameters:
        -
          in: path
          name: queuename
          description: Name of the queue
          required: true
          schema:
            type: string
        -
          in: query
          name: oauth
          description: Access token
          required: true
          schema:
            type: string
        -
          in: body
          name: ReservationRequest
          description: Object containing reservation parameters
          required: true
          schema:
            type: object
            properties:
              n:
                type: integer
              timeout:
                type: integer
              wait:
                type: integer
              delete:
                type: boolean
              
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              meassages:
                type: object
                properties:
                  id:
                    type: integer
                  body:
                    type: string
                  reserved_count:
                    type: integer
                  reservation_id:
                    type: string

  /queues/{queuename}/messages/{messageid}:
    delete:
      description: |
        Delete reserved messages by id and reservation id.
      parameters:
        -
          in: path
          name: queuename
          description: Name of the queue
          required: true
          schema:
            type: string
        -
          in: path
          name: messageid
          description: Id of the message to delete
          required: true
          schema:
            type: string
        -
          in: body
          name: DeleteMessageRequest
          description: Object containing reservation id
          required: true
          schema:
            type: object
            properties:
              reservation_id:
                type: string

      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              meassages:
                type: object
                properties:
                  msg:
                    type: string
        404:
          description: Not found response
          schema:
            type: object
            properties:
              meassages:
                type: object
                properties:
                  msg:
                    type: string

  /queues/{queuename}/messages/{messageid}/release:
    post:
      description: |
        Release reserved message by id and reservation id.
      parameters:
        -
          in: path
          name: queuename
          description: Name of the queue
          required: true
          schema:
            type: string
        -
          in: path
          name: messageid
          description: Id of the message to release
          required: true
          schema:
            type: string
        -
          in: body
          name: ReleaseMessageRequest
          description: Object containing reservation id and delay time for release
          required: true
          schema:
            type: object
            properties:
              reservation_id:
                type: string
              delay:
                type: integer

      responses:
        200:
          description: Message released response
          schema:
            type: object
            properties:
              meassages:
                type: object
                properties:
                  msg:
                    type: string
        404:
          description: Message not found response
          schema:
            type: object
            properties:
              meassages:
                type: object
                properties:
                  msg:
                    type: string
